<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.2.xsd"
	default-lazy-init="true">
	
	<!-- 使用注解方式 自动注册bean 保证@Required、@Autowired 的属性被注入 -->
	<context:component-scan base-package="com.cousin">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 异步调用需要用到 -->
	<task:annotation-driven />
	

	
	 <!-- 定义实体管理器工厂
         Jpa配置   LocalContainerEntityManagerFactoryBean这个选项Spring扮演了容器的角色。完全掌管JPA -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		 <!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 指定Jpa持久化实现类,这里Hibernate为例 -->
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
		<!-- 指定Entity实体类包路径 -->
		<property name="packagesToScan" value="com.cousin"/>
		<!-- 指定JPA属性；如Hibernate中指定是否显示SQL的是否显示、方言等 -->
		<property name="jpaProperties">
			<props>
				<!-- oracle方言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<!-- 格式化sql语句 -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- validate               加载hibernate时，验证创建数据库表结构
 						create                  每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。
 						create-drop        加载hibernate时创建，退出是删除表结构
						update                 加载hibernate自动更新数据库结构
						慎用可能导致数据表丢失  -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 命名规则 My_NAME->MyName -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- 输出查询的sql语句 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- JDBC的批量抓取数量设定 -->
				<prop key="hibernate.jdbc.batch_size">20</prop>
				<!-- 启用二级缓存 -->
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- 启用查询缓存 -->
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<!-- 启用hibernate 二级缓存插件 -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
			</props>
		</property>
	</bean>
	
	<!-- Hibernate对Jpa的实现 -->
	<bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="showSql" value="true"></property>
	</bean>
	
	<!-- 配置Spring Data Jpa扫描目录 -->
	<jpa:repositories base-package="com.cousin" 
		entity-manager-factory-ref="entityManagerFactory" 
		transaction-manager-ref="transactionManager"
		factory-class="com.cousin.util.data.jpa.factory.BaseRepositoryFactoryBean"/>
	
	<!-- JPa事务配置 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- 启用annotation事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	
	<!-- JSR303 Validator定义 需要自己写检验器类。如果可以在前端控制，就不要用这个校验方法。-->
	<!-- <bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	 -->
	
	<!-- oracle数据源配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" abstract="false" lazy-init="default" autowire="default">
		<!-- 加载oracle驱动类 -->
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"/>
		<!-- 定义数据库路径 -->
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl"/>
		<!-- 定义数据库名字 -->
		<property name="user" value="borrow"/>
		<!-- 定义数据库密码 -->
		<property name="password" value="123"/>
		<!-- 定义数据池最大连接是多少 -->
		<property name="maxPoolSize" value="5" />
		<!-- 定义数据池最少连接时多收 -->
		<property name="minPoolSize" value="1"/>
		<!-- 初始化连接数量 -->
		<property name="initialPoolSize" value="1"/>
	</bean>
	</beans>